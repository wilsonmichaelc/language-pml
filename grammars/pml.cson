'scopeName': 'source.pml'
'name': 'pml'
'fileTypes': [
  'mdl'
  'pml'
  'yaml'
]
'patterns': [
  {
    'match': '#.*$'
    'name': 'comment.source.nm'
    'comment': 'single comment line'
  }

  {
    'match': '\\b(AND|OR|\\&\\&|\\|\\||>\\=|\\=\\=|<|>|\\!)\\b'
    'name': 'keyword.operator.comparison.pml'
  }

  {
    'match': '\\b(\\*\\/\\+\\-\\%\\^)\\b'
    'name': 'entity.operator.arithmetic.pml'
  }

  {
    'match': '\\b(\\=|\\<-)\\b'
    'name': 'entity.operator.assignment.pml'
  }

  {
    'match': '\\b([1-9]+[0-9]*|0)'
    'name': 'constant.numeric.pml'
  }

  {
    'match': '\\b(sample|while|if|else if|else|sleep|peakreset|start|for|call|sleep)\\b'
    'name': 'keyword.control.pml'
  }

  {
    'match': '\\b(tlag|duration|rate|bioavail|idosevar|infdosevar|infratevar)\\b'
    'name': 'variable.other.property.pml'
  }

  {
    'match': '((\\w+)(?=\\(\\))|(c)(?=\\())'
    'name': 'entity.name.class.source.pml'
  }

  {
    #'match': '\\b(real|block|error|ranef1|bioavail|event|ranef2|bolus|first|ranef3|bql|fixef|rate|call|same|cfMacro|secondary|cfMicro|section|constrain|in|covariate|include|infuse|start|deriv|stparm|diag|interpolate|tlag|doafter|interval|uncertainty|join|unit|dosepoint|LL|units|dosepoint1|urine|dosepoint2|model|urinecpt|multi|dropout|observe|duration|override|proc|enable|ranef)\\b'
    'match': '\\b(distrib|deriv|urinecpt|fixef|vcvfixef|vcvranef|vcvranch|iwndf|cfMicro|cfMacro|scModal|deriv|urinecpt|transit|fixef|constrain|ranef|distrib|sample|covariate|fcovariate|interpolate|LL|multi|orginal|event|count|bolus|infuse|observe|group|stparm|secondaryl|sequence|model|join|proc|subject|dosepoint)\\b'
    'name': 'entity.name.function.pml'
    'comment': 'BLUE'
  }

  {
    #'match': '\\b(exp|stdev|log|pi|mean|count|int|double|factorial|phi|lphi|probit|iprobit|ilogit|lambertw|lgamm|lnorm|lpois|lnegbin|erfunc|sleep)\\b'
    'match': '\\b(beta|betamean|binomial|chisq|constant|exponential|gamma|invgamma|logistic|negbin|poisson|studentt|uniform|weibull|M|MVN|T|MVT|N|norm|lognorm|P|sdx|cvpct|varx|mean|median|sdlnx|sdx|factorial)\\b'
    'name': 'support.function.pml'
    'comment': 'BLUEGREEN'
  }

  {
    'match': '\\w+(?=\\s*\\=)'
    'name': 'support.constant.pml'
    'comment': 'ORANGE'
  }

  {
    'match': '(int|double|real|((exp|block|same|diag|iprobit|ilogit)(?=\\()))'
    'name': 'variable.other.property.pml'
    'comment': 'RED'
  }

  ## support.constant.pml = orange (null, .length, )
  ## string.quoted.singlepml = green ()
  ## string.quoted.double.pml = green ()
  ## variable.other.pml = red (this)
  ## entity.name.function.pml = blue (method, function)
  ## entity.name.type.pml = yellow (console, class name)
  ## support.function.pml = bluegreen (parseInt, slice, push, log, indexOf)
  ## constant.language.boolean.pml = orange (true, false)
  ## keyword.control.pml = purple (return)
  ## variable.other.property.pml = red ()

]
